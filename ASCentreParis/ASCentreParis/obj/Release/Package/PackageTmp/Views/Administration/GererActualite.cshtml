@model Models.ObjGestionActualites


<div class="noMarginPaddingVertical" id="form-container">
	<div class="modal-header noMarginPaddingVertical">
	    <button type="button" class="close" onclick="fermerModalAdministration();" aria-hidden="true">&times;   </button>
	    <h3 class="modal-title noMarginPaddingVertical" style="color:white;" id="imageModalLabel">@Model.TitrePage</h3>
	</div>

	<div class="container-fluid modal-body noMarginPaddingVertical">

		<div class="noMarginPaddingVertical col-xs-12">
	     @using(Html.BeginForm("GererActualitePost", "Administration",  FormMethod.Post, new { id = "MyForm",enctype = "multipart/form-data" }))
                    {

			         <h4>Informations principales</h4>
                     <div  class="col-xs-6 col-xs-offset-3" >
		                 <p class="ValidationKO" id="BlocMessageKO" >@Model.messageKO</p>
                            @Html.ValidationSummary("")
                     </div>
	                  <div class="ValidationOK col-xs-6 col-xs-offset-3" >
		                  <p>@Model.messageOK</p>
                     </div>

                    @Html.HiddenFor(model => model.Actualite.Id, new { @id = "tbxId", @class = "form" })
                    @Html.HiddenFor(model => model.ModePage, new { @id = "HiddenForModePage", @class = "form" })
                    @Html.HiddenFor(model => model.TitrePage, new { @id = "HiddenForTitrePage", @class = "form" })
                    @Html.HiddenFor(model => model.isActionOK, new { @id = "HiddenForisActionOK", @class = "form" })
                    @Html.HiddenFor(model => model.isCreationOK, new { @id = "HiddenForisCreationOK", @class = "form" })
                    @Html.HiddenFor(model => model.LibelleBoutonSauvegarde, new { @id = "HiddenForLibelleBoutonSauvegarde", @class = "form" })
                    @Html.HiddenFor(model => model.Actualite.CheminDocument, new { @id = "HiddenForCheminFichierDocument", @class = "form" })
                    @Html.HiddenFor(model => model.Actualite.DateCreation, new { @id = "HiddenForDateCreation", @class = "form" })
                    @Html.HiddenFor(model => model.IndicFichierDocument, new { @id = "HiddenForIndicFichierDocument", @class = "form indic" })
                    @Html.HiddenFor(model => model.IndicSuppressionFichierDocument, new { @id = "HiddenForIndicSuppressionFichierDocument", @class = "form indicSuppression" })

			        <div class="col-xs-12  row blocFormulaire">
	                 	<div class="col-xs-3 libelleFormulaire"  align="right">Titre (*)</div>
                        <div class="col-xs-8">@Html.TextBoxFor(model => model.Actualite.Titre ,new { @id = "tbxTitre", @style = "width:100%;", @class = "form" }) </div>
	                 </div>
			         <div class="col-xs-12 row blocFormulaire">
	                 	<div class="col-xs-3 libelleFormulaire"  align="right">Equipe</div>
                         <div class="col-xs-8">@Html.DropDownListFor(model => model.Actualite.idEquipe, new SelectList(Model.lEquipes, "ID", "VALEUR_STRING", Model.lEquipes), new { @id = "ddlEquipes",@style = "width:50%;", @class = "form" })</div>
	                 </div>
			        <div class="col-xs-12 row blocFormulaire">
	                 	<div class="col-xs-3 libelleFormulaire"  align="right">Resume (*)</div>
                        <div class="col-xs-8">@Html.TextAreaFor(model => model.Actualite.Resume ,new { @id = "tbxResume", @style = "width:100%;", @rows = "7", @class = "form" })</div>
	                 </div>
		              <div class="col-xs-12 row blocFormulaire">
	                 	<div class="col-xs-3  libelleFormulaire"  align="right">Texte</div>
                         <div class="col-xs-8">@Html.TextAreaFor(model => model.Actualite.Texte ,new { @id = "tbxTexte", @style = "width:100%;", @rows = "24", @class = "form" })</div>
	                 </div>
                    <div class="col-xs-12 row blocFormulaire">
                        <div class="col-xs-3  libelleFormulaire" align="right">Image/Video</div>
                        <div class="col-xs-6">
                            @Html.TextBoxFor(model => model.Actualite.FileDocument, new { type = "file", id = "Document", name = "Document", @style = "width:95%;", @accept = ".png, .jpg, .jpeg, .GIF, .MP4, .M4V, .MOV, .MKV" })
                            <label id="DisplayDocument" style="font-weight:normal">@Model.Actualite.CheminDocument.Replace(Commons.Const.UploadActualitePath + "/", "")</label>
                        </div>
                        <div class="col-xs-2">
                            <a class="actionButtonDelete" align="right" data_id="Document" id="DeleteDocument" href="#" style="margin-left:13px;"
                               onclick="javascript:supprimerFichier(this);">
                                <img src="../resources/img/cross.png" title="Supprimer le fichier" />
                            </a>
                        </div>
                    </div>
				   	<div class="col-xs-4 col-xs-offset-4 row blocFormulaire" align="center" style="margin-top:35px;margin-bottom:20px;">

				         	<button id="btn-submit" class="btn btn-primary" style="margin-right:40px" ><span class="glyphicon glyphicon-ok-sign"></span>@Model.LibelleBoutonSauvegarde</button>
			             		<button type="button" class="btn btn-default" onclick="fermerModalAdministration();">Retour</button>
	   				 </div> 
	               }
	    </div>	
	</div>
</div>

<script src="@Url.Content("~/Scripts/AdminActualites.js")"></script>
 <script type="text/javascript">
		var model = @Html.Raw(Json.Encode(Model));
        checkIfCreationOK(model.isCreationOK);
        initForm('Administration','Actualite',['Document']);
</script>

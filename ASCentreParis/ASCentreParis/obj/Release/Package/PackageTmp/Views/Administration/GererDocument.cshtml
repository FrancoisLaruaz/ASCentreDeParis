@model Models.ObjGestionDocuments



<div class="noMarginPaddingVertical" id="form-container">
    <div class="modal-header noMarginPaddingVertical">
        <button type="button" class="close" onclick="fermerModalAdministration();" aria-hidden="true">&times;   </button>
        <h3 class="modal-title noMarginPaddingVertical" style="color:white;" id="imageModalLabel">@Model.TitrePage</h3>
    </div>

    <div class="container-fluid modal-body noMarginPaddingVertical">

        <div class="noMarginPaddingVertical col-xs-12">
            @using (Html.BeginForm("GererDocumentPost", "Administration", FormMethod.Post, new { id = "MyForm", enctype = "multipart/form-data" }))
            {
                <h4>Informations principales</h4>
                    <div class="col-xs-6 col-xs-offset-3">
                        <p class="ValidationKO" id="BlocMessageKO">@Model.messageKO</p>
                        @Html.ValidationSummary("")
                    </div>
                    <div class="ValidationOK col-xs-6 col-xs-offset-3">
                        <p>@Model.messageOK</p>
                    </div>
                    @Html.HiddenFor(model => model.Document.Id, new { @id = "tbxId", @class = "form" })
                    @Html.HiddenFor(model => model.ModePage, new { @id = "HiddenForModePage", @class = "form" })
                    @Html.HiddenFor(model => model.TitrePage, new { @id = "HiddenForTitrePage", @class = "form" })
                    @Html.HiddenFor(model => model.isActionOK, new { @id = "HiddenForisActionOK", @class = "form" })
                    @Html.HiddenFor(model => model.isCreationOK, new { @id = "HiddenForisCreationOK", @class = "form" })
                    @Html.HiddenFor(model => model.LibelleBoutonSauvegarde, new { @id = "HiddenForLibelleBoutonSauvegarde", @class = "form" })
                    @Html.HiddenFor(model => model.Document.CheminDocument, new { @id = "HiddenForCheminFichierDocument", @class = "form" })
                    @Html.HiddenFor(model => model.Document.NomFichierUpload, new { @id = "HiddenForNomFichierUpload", @class = "form" })
                    @Html.HiddenFor(model => model.Document.DateCreation, new { @id = "HiddenForDateCreation", @class = "form" })
                    @Html.HiddenFor(model => model.IndicFichierDocument, new { @id = "HiddenForIndicFichierDocument", @class = "form" })



                    <div class="col-xs-12  row blocFormulaire">
                        <div class="col-xs-3 libelleFormulaire" align="right">Titre</div>
                        <div class="col-xs-8">@Html.TextBoxFor(model => model.Document.Titre, new { @id = "tbxTitre", @style = "width:100%;", @class = "form" }) </div>
                    </div>
                    <div class="col-xs-12 row blocFormulaire">
                        <div class="col-xs-3  libelleFormulaire" align="right">Cat√©gorie document (*)</div>
                        <div class="col-xs-8">@Html.DropDownListFor(model => model.Document.idCategorieDocument, new SelectList(Model.lCategoriesDocument, "ID", "VALEUR_STRING", Model.lCategoriesDocument), new { @id = "ddlCategorieDocument", @style = "width:50%;", @class = "form" })</div>
                    </div>
                    <div class="col-xs-12 row blocFormulaire">
                        <div class="col-xs-3  libelleFormulaire" align="right">Texte</div>
                        <div class="col-xs-8">@Html.TextAreaFor(model => model.Document.Texte, new { @id = "tbxTexte", @style = "width:100%;", @rows = "10", @class = "form" })</div>
                    </div>
                    <div class="col-xs-12 row blocFormulaire">
                        <div class="col-xs-3  libelleFormulaire" align="right">Ordre (*)</div>
                        <div class="col-xs-8">@Html.TextBoxFor(model => model.Document.Ordre, new { @id = "tbxLienClassement", @style = "width:15%;", @class = "form" }) </div>
                    </div>
                    <div class="col-xs-12 row blocFormulaire">
                        <div class="col-xs-3  libelleFormulaire" align="right">Fichier (*)</div>
                        <div class="col-xs-5">@Html.TextBoxFor(model => model.Document.File, new { type = "file", id = "Document", name = "Document", @style = "width:95%;" }) </div>
                        <div class="col-xs-4"><label id="DisplayDocument" style="font-weight:normal">@Model.Document.CheminDocument.Replace(Commons.Const.UploadDocumentPath + "/", "")</label></div>
                    </div>
                    <div class="col-xs-4 col-xs-offset-4 row blocFormulaire" align="center" style="margin-top:25px;margin-bottom:20px;">
                        <button id="btn-submit" class="btn btn-primary" style="margin-right:40px"><span class="glyphicon glyphicon-ok-sign"></span>@Model.LibelleBoutonSauvegarde</button>
                        <button type="button" class="btn btn-default" onclick="fermerModalAdministration();">Retour</button>
                    </div>
            }
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/AdminDocuments.js")"></script>
<script type="text/javascript">
   var model = @Html.Raw(Json.Encode(Model));
    checkIfCreationOK(model.isCreationOK);
    initForm('Administration','Document',['Document']);

</script>
